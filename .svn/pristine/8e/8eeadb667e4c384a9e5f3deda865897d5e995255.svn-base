<template>
  <div class="app-container outhound">
    <el-form
      :model="queryParams"
      ref="queryForm"
      size="small"
      :inline="true"
      v-show="showSearch"
      label-width="68px"
    >
      <el-form-item label="模板名称" prop="tempName">
        <el-input
          v-model="queryParams.tempName"
          placeholder="请输入模板名称"
          clearable
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="模板内容" prop="tempContent">
        <el-input
          v-model="queryParams.tempContent"
          placeholder="请输入模板内容"
          clearable
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="街道名称" prop="tempRegion">
        <el-select
          v-model="queryParams.tempRegion"
          placeholder="请选择街道名称"
          clearable
        >
          <el-option
            v-for="dict in dict.type.ob_region_info"
            :key="dict.value"
            :label="dict.label"
            :value="dict.value"
          />
        </el-select>
      </el-form-item>
      <el-form-item label="任务名称" prop="tempTaskid">
        <el-select
          v-model="queryParams.tempRegion"
          placeholder="请选择任务名称"
          clearable
        >
          <el-option
            v-for="dict in rw_list"
            :key="dict.value"
            :label="dict.label"
            :value="dict.value"
          />
        </el-select>
      </el-form-item>
      <el-form-item label="呼叫状态" prop="tempType">
        <el-select
          v-model="queryParams.tempType"
          placeholder="请选择呼叫状态"
          clearable
        >
          <el-option
            v-for="dict in dict.type.ob_template_type"
            :key="dict.value"
            :label="dict.label"
            :value="dict.value"
          />
        </el-select>
      </el-form-item>
      <el-form-item>
        <el-button
          type="primary"
          icon="el-icon-search"
          size="mini"
          @click="handleQuery"
          >搜索</el-button
        >
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery"
          >重置</el-button
        >
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['outbound:messageTemplate:add']"
          >新增</el-button
        >
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['outbound:messageTemplate:edit']"
          >修改</el-button
        >
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['outbound:messageTemplate:remove']"
          >删除</el-button
        >
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          plain
          icon="el-icon-download"
          size="mini"
          @click="handleExport"
          v-hasPermi="['outbound:messageTemplate:export']"
          >导出</el-button
        >
      </el-col>
      <right-toolbar
        :showSearch.sync="showSearch"
        @queryTable="getList"
      ></right-toolbar>
    </el-row>

    <el-table
      v-loading="loading"
      :data="messageTemplateList"
      @selection-change="handleSelectionChange"
    >
      <el-table-column type="selection" width="55" align="center" />
      <el-table-column label="主键ID" align="center" prop="id" v-if="true" />
      <el-table-column label="模板名称" align="center" prop="tempName" />
      <el-table-column label="模板内容" align="center" prop="tempContent" />
      <el-table-column label="街道名称" align="center" prop="tempRegion">
        <template slot-scope="scope">
          <dict-tag
            :options="dict.type.ob_region_info"
            :value="scope.row.tempRegion"
          />
        </template>
      </el-table-column>
      <el-table-column label="任务名称" align="center" prop="tempTaskid">
        <template slot-scope="scope">
          <dict-tag :options="rw_list" :value="scope.row.tempTaskid" />
        </template>
      </el-table-column>
      <el-table-column label="标签名称" align="center" prop="tempLabel" />
      <el-table-column label="呼叫状态" align="center" prop="tempType">
        <template slot-scope="scope">
          <dict-tag
            :options="dict.type.ob_template_type"
            :value="scope.row.tempType"
          />
        </template>
      </el-table-column>
      <el-table-column
        label="操作"
        align="center"
        class-name="small-padding fixed-width"
      >
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['outbound:messageTemplate:edit']"
            >修改</el-button
          >
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['outbound:messageTemplate:remove']"
            >删除</el-button
          >
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total > 0"
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改短信发送模板对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="900px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
        <el-form-item label="模板名称" prop="tempName">
          <el-input v-model="form.tempName" placeholder="请输入模板名称" />
        </el-form-item>
        <el-form-item label="模板内容" prop="tempContent">
          <el-input
            v-model="form.tempContent"
            type="textarea"
            placeholder="请输入内容"
            class="outbound_text"
          />
        </el-form-item>
        <el-form-item label="街道名称" prop="tempRegion">
          <el-select
            v-model="form.tempRegion"
            placeholder="请选择街道名称"
            @change="temp_change(form.tempRegion)"
          >
            <el-option
              v-for="dict in dict.type.ob_region_info"
              :key="dict.value"
              :label="dict.label"
              :value="dict.value"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item
          label="任务名称"
          prop="tempTaskid"
          v-show="rw_list.length > 0"
        >
          <el-select
            v-model="form.tempTaskid"
            placeholder="请选择任务名称"
            @change="tempTaskid_change(form.tempTaskid)"
          >
            <el-option
              v-for="dict in rw_list"
              :key="dict.id"
              :label="dict.value"
              :value="dict.id"
            ></el-option>
          </el-select>
        </el-form-item>

        <el-form-item label="任务标签" v-show="rw_list.length > 0 && tempLabellist.length > 0">
          <el-checkbox-group
            v-model="form.tempLabel"
            @change="handleCheckedCitiesChange"
          >
            <el-checkbox
              v-for="dict in tempLabellist"
              :label="dict.id"
              :key="dict.id"
              >{{ dict.value }}</el-checkbox
            >
          </el-checkbox-group>
        </el-form-item>

        <el-form-item label="呼叫状态">
          <el-radio-group v-model="form.tempType">
            <el-radio
              v-for="dict in dict.type.ob_template_type"
              :key="dict.value"
              :label="parseInt(dict.value)"
              >{{ dict.label }}</el-radio
            >
          </el-radio-group>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button :loading="buttonLoading" type="primary" @click="submitForm"
          >确 定</el-button
        >
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import {
  listMessageTemplate,
  getMessageTemplate,
  delMessageTemplate,
  addMessageTemplate,
  updateMessageTemplate,
  getrwlist,
  gettempLabe,
} from "@/api/outbound/messageTemplate";
import axios from "axios";
export default {
  name: "MessageTemplate",
  dicts: ["ob_template_type", "ob_region_info"],
  data() {
    return {
      // 按钮loading
      buttonLoading: false,
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // 短信发送模板表格数据
      messageTemplateList: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        tempName: undefined,
        tempContent: undefined,
        tempRegion: undefined,
        tempTaskid: undefined,
        tempLabel: undefined,
        tempType: undefined,
      },
      // 表单参数
      form: {},
      // 表单校验
      rules: {
        id: [{ required: true, message: "主键ID不能为空", trigger: "blur" }],
        tempName: [
          { required: true, message: "模板名称不能为空", trigger: "blur" },
        ],
        tempContent: [
          { required: true, message: "模板内容不能为空", trigger: "blur" },
        ],
        tempRegion: [
          { required: true, message: "街道名称不能为空", trigger: "change" },
        ],
        tempLabel: [
          { required: true, message: "标签名称不能为空", trigger: "blur" },
        ],
        tempType: [
          { required: true, message: "呼叫状态不能为空", trigger: "blur" },
        ],
        isDelete: [
          {
            required: true,
            message: "是否删除(0：否1：是)不能为空",
            trigger: "blur",
          },
        ],
      },
      rw_list: [],
      tempLabellist: [],
    };
  },
  created() {
    this.getList();
    // this.get_rwlist();
  },
  methods: {
    handleCheckedCitiesChange(value) {
      console.log(value);
    },
    // 选中任务名称
    tempTaskid_change(tempTaskid) {
      if(tempTaskid) this.get_tempLabe(tempTaskid);
    },
    // 选中街道名称
    temp_change(id) {
      console.log(this.dict.type.ob_region_info);
      if (id) {
        this.get_rwlist(id);
      }
    },
    // 获取任务名称
    get_rwlist(id) {
      this.rw_list = [];
      let data = {
        regionId: id,
      };
      getrwlist(data).then((res) => {
        this.rw_list = res.data;
        console.log(this.rw_list);
      });
    },
    // 获取标签列表
    get_tempLabe(id) {
      this.tempLabellist = [];
      let data = {
        bizNo: id,
      };
      gettempLabe(data).then((res) => {
        this.tempLabellist = res.data;
      });
    },
    /** 查询短信发送模板列表 */
    getList() {
      this.loading = true;
      listMessageTemplate(this.queryParams).then((response) => {
        this.messageTemplateList = response.rows;
        this.total = response.total;
        this.loading = false;
      });
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        id: undefined,
        tempName: undefined,
        tempContent: undefined,
        tempRegion: undefined,
        tempTaskid: undefined,
        tempLabel: [],
        tempType: 0,
        createTime: undefined,
        updateTime: undefined,
        isDelete: undefined,
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map((item) => item.id);
      this.single = selection.length !== 1;
      this.multiple = !selection.length;
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加短信发送模板";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.loading = true;
      this.reset();
      const id = row.id || this.ids;
      getMessageTemplate(id).then((response) => {
        this.loading = false;
        this.form = response.data;
        this.form.tempLabel = this.form.tempLabel.split(",");
        this.open = true;
        this.title = "修改短信发送模板";
      });
    },
    /** 提交按钮 */
    submitForm() {
      this.$refs["form"].validate((valid) => {
        if (valid) {
          this.buttonLoading = true;
          this.form.tempLabel = this.form.tempLabel.join(",");
          // console.log(this.form);
          if (this.form.id != null) {
            updateMessageTemplate(this.form)
              .then((response) => {
                this.$modal.msgSuccess("修改成功");
                this.open = false;
                this.getList();
              })
              .finally(() => {
                this.buttonLoading = false;
              });
          } else {
            addMessageTemplate(this.form)
              .then((response) => {
                this.$modal.msgSuccess("新增成功");
                this.open = false;
                this.getList();
              })
              .finally(() => {
                this.buttonLoading = false;
              });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const ids = row.id || this.ids;
      this.$modal
        .confirm('是否确认删除短信发送模板编号为"' + ids + '"的数据项？')
        .then(() => {
          this.loading = true;
          return delMessageTemplate(ids);
        })
        .then(() => {
          this.loading = false;
          this.getList();
          this.$modal.msgSuccess("删除成功");
        })
        .finally(() => {
          this.loading = false;
        });
    },
    /** 导出按钮操作 */
    handleExport() {
      this.download(
        "outbound/messageTemplate/export",
        {
          ...this.queryParams,
        },
        `messageTemplate_${new Date().getTime()}.xlsx`
      );
    },
  },
};
</script>

<style>
.outbound_text .el-textarea__inner {
  height: 200px !important;
}
</style>
